async function cacheOperation(e){async function t(){try{await cacheObject.write("initCheck","initialized")}catch(e){console.error("初始化缓存数据库时发生错误:",e)}}async function s(){try{let t=await cacheObject.read("version");if(null==t)throw new Error("Version key not found.")}catch(t){console.log("version键不存在，将进行初始化...");try{await cacheObject.write("version",e),console.log("Version 初始化成功。")}catch(e){console.error("初始化version键时发生错误:",e)}}}await t(),await s();try{let t=await cacheObject.read("version");if(null==t)return console.error("读取version后仍未能找到该键，这是一个不应该出现的情况。"),!1;let s=Number(t.split("-")[1]),o=Number(e.split("-")[1]);return isNaN(o)?(console.error("新版本号格式错误，无法正确转换为数字进行比较。"),!1):isNaN(s)?(console.log("当前版本信息不完整，将直接设置新版本为初始版本"),await cacheObject.write("version",e),!0):o!==s?(await cacheObject.write("version",e),console.log(`版本已更新：${e}`),!0):(console.log("当前是最新版本"),!1)}catch(e){return console.error("在执行 cacheOperation 时发生错误:",e),!1}}function checkUpdate(e){const t=e["dist-tags"].latest;cacheOperation(t).then(e=>{e?console.log("博客缓存版本已更新"):console.log(`当前版本: ${t} 是最新的`)}).catch(e=>{console.error("更新检查失败:",e)})}function getNewestData(){const e=`${NPM_REGISTRY_BASE_URL}${packageName}`;self.fetch(e).then(e=>e.json()).then(e=>checkUpdate(e)).catch(e=>console.error("Fetch 更新信息失败:",e))}function fetchNewestDataIfNeeded(){isDataFetched||(getNewestData(),isDataFetched=!0)}function corsResponse(e){const t=new Headers(e.headers),s=e.url.endsWith("-html.json");return s&&t.set("Content-Type","text/html; charset=utf-8"),t.set("Access-Control-Allow-Origin","*"),t.set("Access-Control-Allow-Methods","GET, HEAD, POST, OPTIONS"),t.set("Access-Control-Allow-Headers","Content-Type"),new Response(e.body,{status:e.status,headers:t})}self.importScripts("/js/cache-db.min.js");let blogVersion="",checkJson={},isDataFetched=!1;const NPM_REGISTRY_BASE_URL="https://registry.npmmirror.com/",packageName="@floatsheep/fsl-blog",blogDomain="blog.hesiy.cn",localMode=!0,cacheObject=new CacheDB("ServiceStorage","objectPrefix",{auto:1});self.addEventListener("install",e=>{self.skipWaiting()}),self.addEventListener("activate",e=>{e.waitUntil(self.clients.claim().then(()=>{fetchNewestDataIfNeeded()}))}),self.addEventListener("fetch",e=>{fetchNewestDataIfNeeded();const t=new URL(e.request.url),s="text/event-stream"===e.request.headers.get("Accept");if(s)return;const o=localMode||t.hostname===blogDomain,c=o&&e.request.url.startsWith(self.location.origin)&&!e.request.url.includes("sw.js");if(c){let s=t.pathname;if(s.endsWith("/")&&(s+="index.html"),s.endsWith(".html")){let e=s.split("/").pop(),t=e.slice(0,e.lastIndexOf("."));s=s.replace(e,`${t}-html.json`)}cacheObject.read("version").then(e=>{e?blogVersion=e:getNewestData()}).catch(e=>{console.error("获取版本信息失败:",e)});const o=`${NPM_REGISTRY_BASE_URL}${packageName}/${blogVersion}/files${s}`;e.respondWith(fetch(o).then(e=>{if(!e.ok)throw new Error(`NPM Mirror 响应出现问题, 状态码返回：${e.status}`);return corsResponse(e)}).catch(t=>(console.log("从 NPM Mirror 获取数据失败，退回到原请求：",t.message),fetch(e.request).then(e=>{if(!e.ok)throw new Error("原始请求失败");return corsResponse(e)}).catch(e=>(console.log("原始请求失败，返回404页面：",e.message),fetch(`${NPM_REGISTRY_BASE_URL}${packageName}/${blogVersion}/files/404.html.json`).then(e=>corsResponse(e)))))))}}),self.addEventListener("terminate",e=>{isDataFetched=!1}),self.addEventListener("message",e=>{e.data&&"force-refresh"===e.data.action&&self.registration.update().then(()=>{cacheObject.delete("version").then(function(){console.log("版本缓存清除")}).catch(function(e){console.log(e)}),caches.keys().then(e=>Promise.all(e.map(e=>caches.delete(e)))).then(()=>{self.clients.matchAll().then(e=>{e.forEach(e=>e.postMessage("sw-updated"))})})})});